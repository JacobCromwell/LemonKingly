body {
    margin: 0;
    padding: 0;
    background-color: #222;
    color: white;
    font-family: Arial, sans-serif;
    overflow: hidden;
}

#gameContainer {
    display: flex;
    flex-direction: column;
    height: 100vh;
}

#menu {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    height: 100vh;
    background: linear-gradient(135deg, #1e3c72 0%, #2a5298 100%);
}

#menu h1 {
    font-size: 48px;
    margin-bottom: 40px;
    text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.5);
}

.menuButton {
    width: 200px;
    padding: 15px 30px;
    margin: 10px;
    font-size: 20px;
    background-color: #4CAF50;
    color: white;
    border: none;
    border-radius: 5px;
    cursor: pointer;
    transition: background-color 0.3s;
    display: block;
    text-align: center;
}

.menuButton:hover {
    background-color: #45a049;
}

/* File input styling for menu */
.fileLabel.menuButton {
    display: block;
    text-align: center;
    padding: 15px 30px;
    margin: 10px;
    width: 200px;
    box-sizing: border-box;
}

#gameCanvas {
    border: 2px solid #444;
    display: block;
    margin: 0 auto;
}

#gameUI {
    background-color: #333;
    padding: 10px;
    display: flex;
    flex-direction: column;
    gap: 10px;
}

#minimapContainer {
    position: absolute;
    bottom: 20px;
    right: 20px;
    background-color: rgba(0, 0, 0, 0.8);
    border: 2px solid #666;
    border-radius: 5px;
    padding: 5px;
}

#minimapCanvas {
    display: block;
    border: 1px solid #444;
    cursor: pointer;
}

#minimapContainer:hover {
    border-color: #888;
}

#toolbar {
    display: flex;
    justify-content: center;
    align-items: center;
    gap: 20px;
    padding: 10px;
    background-color: #444;
    border-radius: 5px;
}

.actionButton {
    position: relative;
    width: 60px;
    height: 60px;
    border: 2px solid #666;
    background-color: #555;
    color: white;
    cursor: pointer;
    border-radius: 5px;
    transition: all 0.2s;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    font-weight: bold;
}

.actionButton:hover {
    background-color: #666;
    border-color: #888;
}

.actionButton.selected {
    background-color: #4CAF50;
    border-color: #6FCF70;
}

/* Nuke button special styling */
.actionButton.nuke {
    background: linear-gradient(135deg, #ff4444 0%, #cc0000 100%);
    border-color: #ff6666;
    box-shadow: 0 0 10px rgba(255, 68, 68, 0.3);
    animation: nukeGlow 2s ease-in-out infinite alternate;
}

.actionButton.nuke:hover {
    background: linear-gradient(135deg, #ff6666 0%, #ff0000 100%);
    border-color: #ff8888;
    box-shadow: 0 0 15px rgba(255, 68, 68, 0.5);
    transform: scale(1.05);
}

@keyframes nukeGlow {
    from {
        box-shadow: 0 0 10px rgba(255, 68, 68, 0.3);
    }

    to {
        box-shadow: 0 0 20px rgba(255, 68, 68, 0.6);
    }
}

.actionCount {
    position: absolute;
    top: -8px;
    right: -8px;
    background-color: #ff6b6b;
    color: white;
    border-radius: 50%;
    width: 20px;
    height: 20px;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 12px;
    font-weight: bold;
}

.speedControl {
    display: flex;
    align-items: center;
    gap: 10px;
    margin-left: 20px;
    padding: 5px 10px;
    background-color: #555;
    border-radius: 5px;
}

.speedButton {
    width: 30px;
    height: 30px;
    border: none;
    background-color: #666;
    color: white;
    cursor: pointer;
    border-radius: 3px;
}

.speedButton:hover {
    background-color: #777;
}

.endLevelButton {
    margin-left: 20px;
    padding: 8px 16px;
    background-color: #f44336;
    color: white;
    border: none;
    border-radius: 5px;
    cursor: pointer;
    font-size: 14px;
    transition: background-color 0.3s;
}

.endLevelButton:hover {
    background-color: #da190b;
}

#levelInfo {
    position: absolute;
    top: 10px;
    left: 10px;
    background-color: rgba(0, 0, 0, 0.7);
    padding: 10px;
    border-radius: 5px;
    font-size: 14px;
}

#levelEditor {
    display: none;
    padding: 20px;
    background-color: #333;
}

.hidden {
    display: none !important;
}

#settingsDialog,
#audioSettingsDialog {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.8);
    display: flex;
    justify-content: center;
    align-items: center;
    z-index: 1000;
}

.dialogContent {
    background-color: #333;
    padding: 30px;
    border-radius: 10px;
    border: 2px solid #555;
    text-align: center;
    min-width: 300px;
}

.dialogContent h2 {
    margin-top: 0;
    margin-bottom: 20px;
    color: white;
}

.dialogButton {
    display: block;
    width: 100%;
    padding: 12px 20px;
    margin: 10px 0;
    background-color: #4CAF50;
    color: white;
    border: none;
    border-radius: 5px;
    cursor: pointer;
    font-size: 16px;
    transition: background-color 0.3s;
}

.dialogButton:hover {
    background-color: #45a049;
}

.dialogButton.cancel {
    background-color: #666;
}

.dialogButton.cancel:hover {
    background-color: #555;
}

.fileLabel.dialogButton {
    display: block;
    text-align: center;
    padding: 12px 0px;
}

.sliderContainer {
    margin: 20px 0;
    text-align: left;
}

.sliderContainer label {
    display: block;
    margin-bottom: 10px;
    color: white;
}

.sliderContainer input[type="range"] {
    width: 100%;
    height: 8px;
    background: #555;
    outline: none;
    opacity: 0.7;
    border-radius: 4px;
    transition: opacity 0.2s;
}

.sliderContainer input[type="range"]:hover {
    opacity: 1;
}

.sliderContainer input[type="range"]::-webkit-slider-thumb {
    width: 20px;
    height: 20px;
    background: #4CAF50;
    cursor: pointer;
    border-radius: 50%;
    -webkit-appearance: none;
}

.sliderContainer input[type="range"]::-moz-range-thumb {
    width: 20px;
    height: 20px;
    background: #4CAF50;
    cursor: pointer;
    border-radius: 50%;
}

/* Optional: Add pulsing effect to countdown overlay */
@keyframes countdownPulse {
    0% {
        transform: scale(1);
        opacity: 1;
    }

    50% {
        transform: scale(1.1);
        opacity: 0.8;
    }

    100% {
        transform: scale(1);
        opacity: 1;
    }
}

/* Optional: Add fade-in effect for "Get Ready!" text */
@keyframes fadeInFromTop {
    0% {
        opacity: 0;
        transform: translateY(-50px);
    }

    100% {
        opacity: 1;
        transform: translateY(0);
    }
}

/* Style for paused game state indicator */
.game-paused-indicator {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    z-index: 1000;
    text-align: center;
    pointer-events: none;
}

/* Disable UI interactions during countdown */
.countdown-active .actionButton,
.countdown-active .speedControl,
.countdown-active .endLevelButton {
    pointer-events: none;
    opacity: 0.7;
}

.countdown-active #minimapCanvas {
    pointer-events: none;
    opacity: 0.7;
}

/* Pause button styling */
.actionButton[data-action="pause"] {
    background-color: #2196F3;
    border-color: #1976D2;
}

.actionButton[data-action="pause"]:hover {
    background-color: #1976D2;
    border-color: #1565C0;
}

.actionButton[data-action="pause"].paused {
    background-color: #FF9800;
    border-color: #F57C00;
    animation: pausePulse 1.5s ease-in-out infinite alternate;
}

.actionButton[data-action="pause"].paused:hover {
    background-color: #F57C00;
    border-color: #EF6C00;
}

@keyframes pausePulse {
    from {
        box-shadow: 0 0 5px rgba(255, 152, 0, 0.3);
    }

    to {
        box-shadow: 0 0 15px rgba(255, 152, 0, 0.6);
    }
}

/* Disable other action buttons when paused */
.game-paused .actionButton:not([data-action="pause"]) {
    pointer-events: none;
    opacity: 0.5;
}

.game-paused .speedControl,
.game-paused .endLevelButton {
    pointer-events: none;
    opacity: 0.5;
}

/* Update existing countdown-active styles to include pause state */
.countdown-active .actionButton:not([data-action="pause"]),
.countdown-active .speedControl,
.countdown-active .endLevelButton,
.game-paused .actionButton:not([data-action="pause"]),
.game-paused .speedControl,
.game-paused .endLevelButton {
    pointer-events: none;
    opacity: 0.7;
}